{"version":3,"sources":["components/layout/Header.js","components/AdvanceSearch.js","components/Searcher.js","components/Toggle.js","components/JobItem.js","components/JobList.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","textAlign","background","color","borderBottom","borderTop","Header","style","AdvanceSearch","state","on","toggle","event","preventDefault","setState","onClick","this","advSearchBtn","serachLine","onChange","props","handleResultsPerPageChange","value","type","handleLocationChange","placeholder","Component","margin","borderRadius","border","width","Searcher","handleWhatChange","what","target","handleCountryChange","country","where","resultsPerPage","handleSubmit","url","console","log","getServer","divStyle","searchContainer","onSubmit","selectStyle","searchBtnStyle","display","justifyContent","fontSize","Toggle","description","redirectUrl","className","descStyle","href","linkStyle","btnStyle","wordWrap","removeStrong","str","replace","JobItem","title","company","location","created","adDate","slice","adContainer","adTitle","display_name","locationStyle","descContainer","boxShadow","transition","alignSelf","JobList","jobs","map","job","key","id","salary_is_predicted","salary","redirect_url","App","bind","fetch","then","res","json","data","results","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b7e297d.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>Job Finder</h1>\n\n        </header>\n    )\n}\n\nconst headerStyle = {\n    textAlign: 'center',\n    background: 'rgb(50,50,50)',\n    color: 'white',\n    borderBottom: \"1px solid royalblue\",\n    borderTop: \"1px solid rgb(50,50,50)\",\n\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nexport default class AdvanceSearch extends Component {\n    state = {\n        on: false,\n    }\n    toggle = (event) => {\n        event.preventDefault()\n        this.setState({\n            on: !this.state.on\n        })\n    }\n    render() {\n\n        return (\n            <div>\n                <button onClick={this.toggle} style={advSearchBtn}>Advanced Search</button>\n                {this.state.on && (\n                    //here goes the element to be shown/hide\n                    <div>\n                        <select style={serachLine} onChange={this.props.handleResultsPerPageChange}>\n                            <option value='default'>Results per page</option>\n                            <option>25</option>\n                            <option>50</option>\n                            <option>75</option>\n                            <option>100</option>\n                        </select>\n                        <input type=\"text\" onChange={this.props.handleLocationChange} placeholder=\"Location\" style={serachLine} />\n                        <button onClick={this.toggle} style={advSearchBtn}>Close Advanced Search</button>\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\nconst serachLine = {\n    margin: '5px',\n    borderRadius: \"3px\",\n    border: 'none',\n    width: '280px',\n}\nconst advSearchBtn = {\n    border: 'none',\n    background: 'none',\n    color: 'royalblue',\n}\nconst checkboxStyle = {\n    color: 'white',\n    marginLeft: '12px',\n    marginRight: '12px',\n    fontSize: '12px',\n}\nconst rangeStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '12px',\n    color: 'white',\n}","import React, { Component, } from 'react';\nimport AdvanceSearch from './AdvanceSearch';\n\nclass Searcher extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            what: '',\n            country: '',\n            resultsPerPage: '10',\n            where: '',\n\n        }\n    }\n\n    handleWhatChange = (event) => {\n        this.setState({\n            what: event.target.value\n        })\n    }\n    handleCountryChange = (event) => {\n        this.setState({\n            country: event.target.value\n        })\n    }\n    handleLocationChange = (event) => {\n        this.setState({\n            where: event.target.value\n        })\n    }\n    handleResultsPerPageChange = (event) => {\n        this.setState({\n            resultsPerPage: event.target.value\n        })\n    }\n    handleSubmit = (event) => {\n        event.preventDefault()\n        let what = this.state.what;\n        let country = this.state.country;\n        if (what && country) {\n            let where = this.state.where;\n            let resultsPerPage = this.state.resultsPerPage;\n            const YOUR_APP_ID = '4ba05dac';\n            const YOUR_APP_KEY = '4c1878a7bab48cce0966ca79d9929993';\n            const url = `https://api.adzuna.com/v1/api/jobs/${country}/search/1?app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&results_per_page=${resultsPerPage}&what=${what}&where=${where}&content-type=application/json`\n            console.log(url)\n            this.props.getServer(url)\n        }\n    }\n\n\n\n    render() {\n        const { what, country } = this.state\n        return (\n            <div style={divStyle}>\n                <form style={searchContainer} onSubmit={this.handleSubmit} >\n                    <AdvanceSearch\n                        handleLocationChange={this.handleLocationChange}\n                        handleResultsPerPageChange={this.handleResultsPerPageChange}\n                    />\n                    <input type=\"text\" value={what} onChange={this.handleWhatChange} placeholder=\"WHAT?\" style={serachLine} />\n                    <select value={country} onChange={this.handleCountryChange} style={selectStyle}>\n                        <option value=\"0\">YOUR COUNTRY</option>\n                        <option value=\"at\">Austria</option>\n                        <option value=\"au\">Australia</option>\n                        <option value=\"br\">Brazil</option>\n                        <option value=\"ca\">Canada</option>\n                        <option value=\"de\">Denemark</option>\n                        <option value=\"fr\">France</option>\n                        <option value=\"gb\">England</option>\n                        <option value=\"in\">India</option>\n                        <option value=\"it\">Italy</option>\n                        <option value=\"nl\">Netherland</option>\n                        <option value=\"nz\">New Zealand</option>\n                        <option value=\"pl\">Poland</option>\n                        <option value=\"ru\">Russia</option>\n                        <option value=\"sg\">Singapore</option>\n                        <option value=\"us\">USA</option>\n                        <option value=\"za\">South Africa</option>\n                    </select>\n                    <button type='submit' style={searchBtnStyle}>SEARCH</button>\n                </form>\n            </div>\n        )\n    }\n}\nconst divStyle = {\n    background: 'rgb(50,50,50)',\n    border: '3px solid rgb(50,50,50)',\n    display: 'flex',\n    justifyContent: 'center',\n}\nconst searchContainer = {\n    border: '3px solid rgb(50,50,50)',\n    textAlign: 'center',\n    width: '300px',\n}\nconst serachLine = {\n    margin: '5px',\n    borderRadius: \"3px\",\n    border: 'none',\n    width: '280px',\n    fontSize: '12px',\n}\nconst selectStyle = {\n    margin: '5px',\n    borderRadius: \"3px\",\n    border: 'none',\n    width: '135px',\n    fontSize: '12px',\n}\nconst searchBtnStyle = {\n    width: '135px',\n    margin: '5px', background: 'royalblue',\n    borderRadius: \"3px\",\n    border: '1px solid royalblue',\n    color: 'white',\n    fontSize: '12px',\n}\n\nexport default Searcher\n","import React, { Component } from 'react'\n\nexport default class Toggle extends Component {\n    state = {\n        on: false,\n    }\n    toggle = () => {\n        this.setState({\n            on: !this.state.on\n        })\n    }\n    render() {\n        const { description, redirectUrl } = this.props\n        return (\n            <div>\n                {this.state.on && (\n                    //here goes the element to be shown/hide\n                    <div>\n                        <div>\n                            <p className='desc' style={descStyle}>{description}</p>\n                        </div>\n                        <div>\n                            <a href={redirectUrl} style={linkStyle}>contact</a>\n                        </div>\n                    </div>\n                )}\n                <button onClick={this.toggle} style={btnStyle}>Show/Hide</button>\n            </div>\n        )\n    }\n}\nconst descStyle = {\n    wordWrap: 'break-word'\n}\n\nconst btnStyle = {\n    border: 'none',\n    color: 'royalblue'\n}\nconst linkStyle = {\n    color: 'royalblue',\n    margin: '20px',\n}","import React, { Component } from 'react';\nimport Toggle from './Toggle'\n\nfunction removeStrong(str) {\n    return str.replace(/[<strong>]/g, \"\").replace(/[</strong>]/g, \"\")\n}\nexport class JobItem extends Component {\n    render() {\n        const { title, company, location, created, description, redirectUrl } = this.props;\n        const adDate = created.replace('T', ` at: `).slice(0, -3)\n        console.log(typeof (description))\n        return (\n            <div style={adContainer}>\n                <div style={adTitle}>\n                    <h3> {removeStrong(title)}</h3>\n                    <p style={{ color: 'royalblue' }}>{company.display_name}</p>\n                </div>\n                <div style={locationStyle}><p>{location}</p></div>\n                <div className='desc-container' style={descContainer}>\n                    <Toggle description={removeStrong(description)} redirectUrl={redirectUrl} />\n                </div>\n\n                <p style={{ textAlign: 'center', fontSize: '12px' }}> Created on: {adDate} </p>\n            </div>\n        )\n    }\n}\nconst adTitle = {\n    display: 'flex',\n    justifyContent: 'space-around',\n    margin: '3px',\n    //border: '1px solid black',\n\n}\nconst adContainer = {\n    background: 'white',\n    boxShadow: '0px 0px 10px rgba(50,50,50,0.2)',\n    margin: '10px',\n    borderRadius: '8px',\n    transition: '0.9s ease',\n    alignSelf: 'center',\n\n\n}\nconst descContainer = {\n    //border: '1px solid black',\n    textAlign: 'center',\n    transition: '0.9s ease',\n}\nconst locationStyle = {\n    textAlign: 'center',\n}\nexport default JobItem\n","import React, { Component } from 'react'\nimport JobItem from './JobItem'\n\nexport class JobList extends Component {\n\n    render() {\n        console.log(this.props.jobs);\n        return this.props.jobs.map(job => (\n            <JobItem\n                key={job.id}\n                title={job.title}\n                company={job.company}\n                salary_is_predicted={job.salary_is_predicted}\n                salary={job.salary}\n                location={job.location.display_name}\n                created={job.created}\n                description={job.description}\n                redirectUrl={job.redirect_url}\n            />\n        ))\n    }\n}\n\nexport default JobList\n\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport Searcher from './components/Searcher';\nimport JobList from './components/JobList';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: []\n    };\n    this.getServer = this.getServer.bind(this)\n  };\n\n  getServer(url) {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ jobs: data.results })\n      })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Searcher getServer={this.getServer} />\n        <JobList jobs={this.state.jobs} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}