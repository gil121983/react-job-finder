{"version":3,"sources":["components/layout/Header.js","components/AdvanceSearch.js","components/Searcher.js","components/Toggle.js","components/JobItem.js","components/JobList.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","textAlign","background","color","borderBottom","borderTop","Header","style","AdvanceSearch","state","on","toggle","event","preventDefault","setState","onClick","this","advSearchBtn","serachLine","value","checkboxStyle","type","name","id","htmlFor","placeholder","onChange","props","handleLocationChange","rangeStyle","min","max","marginLeft","width","Component","margin","borderRadius","border","marginRight","fontSize","display","alignItems","justifyContent","Searcher","handleWhatChange","what","target","handleCountryChange","country","where","handleSubmit","resultsPerPage","url","console","log","getServer","divStyle","searchContainer","onSubmit","selectStyle","searchBtnStyle","Toggle","description","redirectUrl","className","descStyle","href","linkStyle","btnStyle","wordWrap","JobItem","title","company","created","adDate","replace","slice","adContainer","adTitle","display_name","descContainer","boxShadow","transition","alignSelf","JobList","jobs","map","job","key","redirect_url","App","bind","fetch","then","res","json","data","results","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9ed441d5.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>Job Finder</h1>\n\n        </header>\n    )\n}\n\nconst headerStyle = {\n    textAlign: 'center',\n    background: 'rgb(50,50,50)',\n    color: 'white',\n    borderBottom: \"1px solid royalblue\",\n    borderTop: \"1px solid rgb(50,50,50)\",\n\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nexport default class AdvanceSearch extends Component {\n    state = {\n        on: false,\n    }\n    toggle = (event) => {\n        event.preventDefault()\n        this.setState({\n            on: !this.state.on\n        })\n    }\n    render() {\n\n        return (\n            <div>\n                <button onClick={this.toggle} style={advSearchBtn}>Advanced Search</button>\n                {this.state.on && (\n                    //here goes the element to be shown/hide\n                    <div>\n                        <select style={serachLine}>\n                            <option value='default'>Results per page</option>\n                            <option>25</option>\n                            <option>50</option>\n                            <option>75</option>\n                            <option>100</option>\n                        </select>\n\n\n                        <div>\n                            <span style={checkboxStyle}>\n                                <input type=\"checkbox\" name='type' value='full' id='full' />\n                                <label htmlFor=\"full\" >Ful Time</label>\n                            </span>\n                            <span style={checkboxStyle}>\n                                <input type=\"checkbox\" name='type' value='part' id='part' />\n                                <label htmlFor=\"part\" >Part Time</label>\n                            </span >\n                        </div>\n\n                        <input type=\"text\" placeholder=\"Minimum Salary\" style={serachLine} />\n                        <input type=\"text\" placeholder=\"Minimum Salary\" style={serachLine} />\n                        <div style={checkboxStyle}>\n                            <input type=\"checkbox\" name='type' value='salary' id='salary' />\n                            <label htmlFor=\"salary\" >Show ads with unknown salary</label>\n                        </div >\n\n                        <input type=\"text\" placeholder=\"Category\" style={serachLine} />\n                        <input type=\"text\" placeholder=\"Company\" style={serachLine} />\n                        <div>\n                            <span style={checkboxStyle}>\n                                <input type=\"checkbox\" name='type' value='contract' id='contract' />\n                                <label htmlFor=\"contract\" >Contract</label>\n                            </span >\n                            <span style={checkboxStyle}>\n                                <input type=\"checkbox\" name='type' value='permanent' id='permanent' />\n                                <label htmlFor=\"permanent\" >Permanent</label>\n                            </span >\n                        </div>\n                        <input type=\"text\" onChange={this.props.handleLocationChange} placeholder=\"Location\" style={serachLine} />\n                        <div style={rangeStyle} >\n                            Distance: <input type=\"range\" min='0' max='50' style={{ marginLeft: '10px', width: '190px' }} />\n                        </div>\n                        <button onClick={this.toggle} style={advSearchBtn}>Close Advanced Search</button>\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\nconst serachLine = {\n    margin: '5px',\n    borderRadius: \"3px\",\n    border: 'none',\n    width: '280px',\n}\nconst advSearchBtn = {\n    border: 'none',\n    background: 'none',\n    color: 'royalblue',\n}\nconst checkboxStyle = {\n    color: 'white',\n    marginLeft: '12px',\n    marginRight: '12px',\n    fontSize: '12px',\n}\nconst rangeStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '12px',\n    color: 'white',\n}","import React, { Component, } from 'react';\nimport AdvanceSearch from './AdvanceSearch';\n\nclass Searcher extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            what: '',\n            country: '',\n            resultsPerPage: '10',\n            where: '',\n\n        }\n    }\n\n    handleWhatChange = (event) => {\n        this.setState({\n            what: event.target.value\n        })\n    }\n    handleCountryChange = (event) => {\n        this.setState({\n            country: event.target.value\n        })\n    }\n    handleLocationChange = (event) => {\n        this.setState({\n            where: event.target.value\n        })\n    }\n    handleSubmit = (event) => {\n        event.preventDefault()\n        let what = this.state.what;\n        let country = this.state.country;\n        if (what && country) {\n            let where = this.state.where;\n            let resultsPerPage = this.state.resultsPerPage;\n            const YOUR_APP_ID = '4ba05dac';\n            const YOUR_APP_KEY = '4c1878a7bab48cce0966ca79d9929993';\n            const url = `https://api.adzuna.com/v1/api/jobs/${country}/search/1?app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&results_per_page=${resultsPerPage}&what=${what}&where=${where}&content-type=application/json`\n            console.log(url)\n            this.props.getServer(url)\n        }\n    }\n\n\n\n    render() {\n        const { what, country } = this.state\n        return (\n            <div style={divStyle}>\n                <form style={searchContainer} onSubmit={this.handleSubmit} >\n                    <AdvanceSearch handleLocationChange={this.handleLocationChange} />\n                    <input type=\"text\" value={what} onChange={this.handleWhatChange} placeholder=\"WHAT?\" style={serachLine} />\n                    <select value={country} onChange={this.handleCountryChange} style={selectStyle}>\n                        <option value=\"0\">YOUR COUNTRY</option>\n                        <option value=\"at\">Austria</option>\n                        <option value=\"au\">Australia</option>\n                        <option value=\"br\">Brazil</option>\n                        <option value=\"ca\">Canada</option>\n                        <option value=\"de\">Denemark</option>\n                        <option value=\"fr\">France</option>\n                        <option value=\"gb\">England</option>\n                        <option value=\"in\">India</option>\n                        <option value=\"it\">Italy</option>\n                        <option value=\"nl\">Netherland</option>\n                        <option value=\"nz\">New Zealand</option>\n                        <option value=\"pl\">Poland</option>\n                        <option value=\"ru\">Russia</option>\n                        <option value=\"sg\">Singapore</option>\n                        <option value=\"us\">USA</option>\n                        <option value=\"za\">South Africa</option>\n                    </select>\n                    <button type='submit' style={searchBtnStyle}>SEARCH</button>\n                </form>\n            </div>\n        )\n    }\n}\nconst divStyle = {\n    background: 'rgb(50,50,50)',\n    border: '3px solid rgb(50,50,50)',\n    display: 'flex',\n    justifyContent: 'center',\n}\nconst searchContainer = {\n    border: '3px solid rgb(50,50,50)',\n    textAlign: 'center',\n    width: '300px',\n}\nconst serachLine = {\n    margin: '5px',\n    borderRadius: \"3px\",\n    border: 'none',\n    width: '280px',\n    fontSize: '12px',\n}\nconst selectStyle = {\n    margin: '5px',\n    borderRadius: \"3px\",\n    border: 'none',\n    width: '135px',\n    fontSize: '12px',\n}\nconst searchBtnStyle = {\n    width: '135px',\n    margin: '5px', background: 'royalblue',\n    borderRadius: \"3px\",\n    border: '1px solid royalblue',\n    color: 'white',\n    fontSize: '12px',\n}\n\nexport default Searcher\n","import React, { Component } from 'react'\n\nexport default class Toggle extends Component {\n    state = {\n        on: false,\n    }\n    toggle = () => {\n        this.setState({\n            on: !this.state.on\n        })\n    }\n    render() {\n        const { description, redirectUrl } = this.props\n        return (\n            <div>\n                {this.state.on && (\n                    //here goes the element to be shown/hide\n                    <div>\n                        <div>\n                            <p className='desc' style={descStyle}>{description}</p>\n                        </div>\n                        <div>\n                            <a href={redirectUrl} style={linkStyle}>contact</a>\n                        </div>\n                    </div>\n                )}\n                <button onClick={this.toggle} style={btnStyle}>Show/Hide</button>\n            </div>\n        )\n    }\n}\nconst descStyle = {\n    wordWrap: 'break-word'\n}\n\nconst btnStyle = {\n    border: 'none',\n    color: 'royalblue'\n}\nconst linkStyle = {\n    color: 'royalblue',\n    margin: '20px',\n}","import React, { Component } from 'react';\nimport Toggle from './Toggle'\n\nfunction removeStrong(str) {\n    return str.replace('<strong>', \"\").replace('</strong>', \"\")\n}\nexport class JobItem extends Component {\n    render() {\n        const { title, company, created, description, redirectUrl } = this.props;\n        const adDate = created.replace('T', ` at: `).slice(0, -3)\n        return (\n            <div style={adContainer}>\n                <div style={adTitle}>\n                    <h3> {removeStrong(title)}</h3>\n                    <p style={{ color: 'royalblue' }}>{company.display_name}</p>\n                </div>\n                <div className='desc-container' style={descContainer}>\n                    <Toggle description={description} redirectUrl={redirectUrl} />\n                </div>\n                <p style={{ textAlign: 'center', fontSize: '12px' }}> Created on: {adDate} </p>\n            </div>\n        )\n    }\n}\nconst adTitle = {\n    display: 'flex',\n    justifyContent: 'space-around',\n    margin: '3px',\n    //border: '1px solid black',\n\n}\nconst adContainer = {\n    background: 'white',\n    boxShadow: '0px 0px 10px rgba(50,50,50,0.2)',\n    margin: '10px',\n    borderRadius: '8px',\n    transition: '0.9s ease',\n    alignSelf: 'center',\n\n\n}\nconst descContainer = {\n    //border: '1px solid black',\n    textAlign: 'center',\n    transition: '0.9s ease',\n}\n\nexport default JobItem\n","import React, { Component } from 'react'\nimport JobItem from './JobItem'\n\nexport class JobList extends Component {\n\n    render() {\n        console.log(this.props.jobs);\n        return this.props.jobs.map(job => (\n            <JobItem\n                key={job.id}\n                title={job.title}\n                company={job.company}\n                created={job.created}\n                description={job.description}\n                redirectUrl={job.redirect_url}\n            />\n        ))\n    }\n}\n\nexport default JobList\n\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport Searcher from './components/Searcher';\nimport JobList from './components/JobList';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: []\n    };\n    this.getServer = this.getServer.bind(this)\n  };\n\n  getServer(url) {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ jobs: data.results })\n      })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Searcher getServer={this.getServer} />\n        <JobList jobs={this.state.jobs} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}